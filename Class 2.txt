Class 2 (26/07)
----------
Topics: Basics (Comments, Quotes)
Next: Basics (Escaping Characters, variables, Combine string and variables)
Exercises:

---------------------
Commands:
 $ python3 -V
 $ pip3 -V
 $ pwd
 $ ls
 $ cd <path>
 $ python3  sample.py

------
manoj@HP-Compaq:~/Python/Sara$ python3.6
Python 3.6.9 (default, Jun 29 2022, 11:45:57) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 
>>> print("welcome to python")
welcome to python
>>> 
>>> 
>>> print "welcome to python"
  File "<stdin>", line 1
    print "welcome to python"
                            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("welcome to python")?
>>> 
>>> 
>>> 
>>> print('welcome to python')
welcome to python
>>> 
>>> 
>>> 
>>> print('welcome to python')
welcome to python
>>> print "welcome to python"
  File "<stdin>", line 1
    print "welcome to python"
                            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("welcome to python")?
>>> 
>>> 
>>> print('welcome to python')
welcome to python
>>> 
>>> print("welcome to python")
welcome to python
>>> 
>>> 
>>> 
>>> 
>>> print("welcome
  File "<stdin>", line 1
    print("welcome
                 ^
SyntaxError: EOL while scanning string literal
>>> 
>>> 
>>> print("welcome \
... python \
... end line")
welcome python end line
>>> 
>>> 
>>> 
>>> print('''welcome
... python
... end line''')
welcome
python
end line
>>> 
>>> 
>>> print("""welcome
... python
... end line""")
welcome
python
end line
>>> 

------

Version,
2.x - Older
3.x - New

$a - scalar
@array - array

a
array

Python - Indentation language

C/C++/Java,
int a;
a=100;
if (a == 100) {
 printf("IF MATCH");
    printf("A value is 100");
}


Python, (Indentation Language) - Dynamic Data Type Allocation
a=100
if a == 100:
   print("IF MATCH")
   print("Value of a is 100")
print("If block end")


Compiled Vs Interpreted,
sample.java
> javac sample.java
> java sample


sample.py
> python sample.py


Comments,
C/C++/Java
single line - //
Multi line - /* ........ */

Python,
single line - #
"""....""" 

File Extension
 .py - default
 .pyw - windows
 .pyc - compiled


a = 100

Escaping Characters
\n = newline
\t - tab
\\ - \
\'
\"
